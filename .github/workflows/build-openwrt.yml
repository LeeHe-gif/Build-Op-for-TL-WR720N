name: Build OpenWrt

on:
  push:
    branches:
      - master
    # paths:
    #   - '.config'
    #   - 'mw4530r.seed.config'
    #   - 'tl-wr720n.seed.config'
  # schedule:
  #   - cron: 0 8 * * 5
  # watch:
  #   types: started
  # repository_dispatch:
  # release:
  #   types: published

env:
  # REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  # CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: true
  UPLOAD_CONFIG: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: false
  UPLOAD_UPGRADE_FIRMWARE_ONLY: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  
  build-openwrt-for-mw4530r:

    env:
      BUILD_TARGET: mw4530r
      CONFIG_FILE: mw4530r.seed.config
      UPGRADE_FIRMWARE_FILE: openwrt-ar71xx-generic-mw4530r-v1-squashfs-sysupgrade.bin

    # runs-on: ubuntu-latest
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Load custom configuration
      run: |
        echo $PWD
        ls -al
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        ls -al
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Upload config
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BUILD_TARGET }}.config4
        path: /workdir/openwrt/.config

    - name: Upload config
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BUILD_TARGET }}.config1
        path: workdir/openwrt/.config

    - name: Upload config
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BUILD_TARGET }}.config0
        path: .config

    - name: Upload config
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BUILD_TARGET }}.config2
        path: $GITHUB_WORKSPACE/openwrt/.config

    - name: Upload config
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BUILD_TARGET }}.config3
        path: $PWD/openwrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        ./scripts/diffconfig.sh > seed.config
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        # grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        # [ -s DEVICE_NAME ] && echo "::set-env name=DEVICE_NAME::_$(cat DEVICE_NAME)"
        echo "::set-env name=FILE_DATE::_$(date +"%y%m%d")"

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.config
        path: openwrt/.config

    - name: Upload seed.config
      uses: actions/upload-artifact@master
      if: env.SSH_ACTIONS == 'true' && env.UPLOAD_CONFIG == 'true'
      with:
        name: ${{ env.BUILD_TARGET }}.seed.config
        path: openwrt/seed.config

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.BUILD_TARGET }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      # if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        ls -l
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: env.UPLOAD_FIRMWARE == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload upgrade firmware only
      uses: actions/upload-artifact@master
      if: env.UPLOAD_UPGRADE_FIRMWARE_ONLY == 'true' && steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.BUILD_TARGET }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/${{ env.UPGRADE_FIRMWARE_FILE }}
    
    - name: Upload firmware to cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
